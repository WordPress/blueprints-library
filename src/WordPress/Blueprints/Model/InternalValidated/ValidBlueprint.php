<?php
/**
 * @file AUTOGENERATED FILE – DO NOT CHANGE MANUALLY
 * All your changes will get overridden. See the README for more details.
 */

namespace WordPress\Blueprints\Model\InternalValidated;

use WordPress\Blueprints\Model\Dirty\ActivatePluginStep;
use WordPress\Blueprints\Model\Dirty\ActivateThemeStep;
use WordPress\Blueprints\Model\Dirty\BlueprintOnBoot;
use WordPress\Blueprints\Model\Dirty\CorePluginResource;
use WordPress\Blueprints\Model\Dirty\CoreThemeResource;
use WordPress\Blueprints\Model\Dirty\CpStep;
use WordPress\Blueprints\Model\Dirty\DefineSiteUrlStep;
use WordPress\Blueprints\Model\Dirty\DefineWpConfigConstsStep;
use WordPress\Blueprints\Model\Dirty\DownloadWordPressStep;
use WordPress\Blueprints\Model\Dirty\EnableMultisiteStep;
use WordPress\Blueprints\Model\Dirty\EvalPHPCallbackStep;
use WordPress\Blueprints\Model\Dirty\FilesystemResource;
use WordPress\Blueprints\Model\Dirty\ImportFileStep;
use WordPress\Blueprints\Model\Dirty\InlineResource;
use WordPress\Blueprints\Model\Dirty\InstallPluginStep;
use WordPress\Blueprints\Model\Dirty\InstallSqliteIntegrationStep;
use WordPress\Blueprints\Model\Dirty\InstallThemeStep;
use WordPress\Blueprints\Model\Dirty\MkdirStep;
use WordPress\Blueprints\Model\Dirty\MvStep;
use WordPress\Blueprints\Model\Dirty\RmDirStep;
use WordPress\Blueprints\Model\Dirty\RmStep;
use WordPress\Blueprints\Model\Dirty\RunPHPStep;
use WordPress\Blueprints\Model\Dirty\RunSQLStep;
use WordPress\Blueprints\Model\Dirty\RunWordPressInstallerStep;
use WordPress\Blueprints\Model\Dirty\SetSiteOptionsStep;
use WordPress\Blueprints\Model\Dirty\UnzipStep;
use WordPress\Blueprints\Model\Dirty\UrlResource;
use WordPress\Blueprints\Model\Dirty\WPCLIStep;
use WordPress\Blueprints\Model\Dirty\WriteFileStep;


class ValidBlueprint
{
    /** @var string Optional description. It doesn't do anything but is exposed as a courtesy to developers who may want to document which blueprint file does what. */
    public $description;

    /** @var mixed Slot for runtime–specific options, schema must be provided by the runtime. */
    public $runtime;

    /** @var BlueprintOnBoot */
    public $onBoot;

    /** @var string The preferred WordPress version to use. If not specified, the latest supported version will be used */
    public $wpVersion;

    /** @var string[]|float[]|bool[] PHP Constants to define on every request */
    public $constants;

    /** @var string[]|FilesystemResource[]|InlineResource[]|CoreThemeResource[]|CorePluginResource[]|UrlResource[]|array WordPress plugins to install and activate */
    public $plugins = [];

    /** @var string[] WordPress site options to define */
    public $siteOptions;

    /** @var ActivatePluginStep[]|ActivateThemeStep[]|CpStep[]|DefineWpConfigConstsStep[]|DefineSiteUrlStep[]|EnableMultisiteStep[]|EvalPHPCallbackStep[]|ImportFileStep[]|InstallPluginStep[]|InstallThemeStep[]|MkdirStep[]|MvStep[]|RmStep[]|RmDirStep[]|RunPHPStep[]|RunWordPressInstallerStep[]|RunSQLStep[]|SetSiteOptionsStep[]|UnzipStep[]|DownloadWordPressStep[]|InstallSqliteIntegrationStep[]|WriteFileStep[]|WPCLIStep[]|array The steps to run after every other operation in this Blueprint was executed. */
    public $steps = [];

    /**
     * @param string $description Optional description. It doesn't do anything but is exposed as a courtesy to developers who may want to document which blueprint file does what.
     * @param mixed $runtime Slot for runtime–specific options, schema must be provided by the runtime.
     * @param BlueprintOnBoot $onBoot
     * @param string $wpVersion The preferred WordPress version to use. If not specified, the latest supported version will be used
     * @param string[]|float[]|bool[] $constants PHP Constants to define on every request
     * @param string[]|FilesystemResource[]|InlineResource[]|CoreThemeResource[]|CorePluginResource[]|UrlResource[]|array $plugins WordPress plugins to install and activate
     * @param string[] $siteOptions WordPress site options to define
     * @param ActivatePluginStep[]|ActivateThemeStep[]|CpStep[]|DefineWpConfigConstsStep[]|DefineSiteUrlStep[]|EnableMultisiteStep[]|EvalPHPCallbackStep[]|ImportFileStep[]|InstallPluginStep[]|InstallThemeStep[]|MkdirStep[]|MvStep[]|RmStep[]|RmDirStep[]|RunPHPStep[]|RunWordPressInstallerStep[]|RunSQLStep[]|SetSiteOptionsStep[]|UnzipStep[]|DownloadWordPressStep[]|InstallSqliteIntegrationStep[]|WriteFileStep[]|WPCLIStep[]|array $steps The steps to run after every other operation in this Blueprint was executed.
     */
    function __construct($description = NULL, $runtime = NULL, BlueprintOnBoot $onBoot = NULL, $wpVersion = NULL, $constants = NULL, $plugins = NULL, $siteOptions = NULL, $steps = NULL)
    {
        $this->description = $description;
        $this->runtime = $runtime;
        $this->onBoot = $onBoot;
        $this->wpVersion = $wpVersion;
        $this->constants = $constants;
        $this->plugins = $plugins;
        $this->siteOptions = $siteOptions;
        $this->steps = $steps;
    }
}